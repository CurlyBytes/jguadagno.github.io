<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>Using Ajax Professional</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h1
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:Arial;}
h2
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
h3
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:Arial;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.Code, li.Code, div.Code
	{margin:0in;
	margin-bottom:.0001pt;
	border:none;
	padding:0in;
	font-size:10.0pt;
	font-family:Courier;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=Section1>

<h1>Using Ajax Professional.NET </h1>

<p class=MsoNormal>Authored By: Joseph Guadagno</p>

<p class=MsoNormal><a href="mailto:jguadagno@hotmail.com">jguadagno@hotmail.com</a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Questions or Comments, please send them to jguadagno@hotmail.com</p>

<h1>Enabling the Website</h1>

<h3>Web.Config</h3>

<p class=MsoNormal>Add into the web config the required httpHandlers within the
&lt;system.web&gt; section</p>

<p class=MsoNormal>&nbsp;</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>&lt;httpHandlers&gt;</p>

<p class=Code style='text-indent:.5in'>&lt;add verb=&quot;POST,GET&quot;
path=&quot;ajaxpro/*.ashx&quot; type=&quot;AjaxPro.AjaxHandlerFactory,
AjaxPro&quot;/&gt;</p>

<p class=Code>&lt;/httpHandlers&gt;</p>

</div>

<p class=MsoNormal>&nbsp;</p>

<h3>Solution</h3>

<p class=MsoNormal>Add a reference to the AjaxPro library</p>

<h2>Enabling the Page</h2>

<h3>CS File</h3>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Register the page for use with the AjaxPro library. This
creates the JavaScript files on the server for the class and methods.  The
syntax is AjaxPro.Utility.RegisterTypeForAjax(GetType(Namespace.ClassName))
(VB)</p>

<p class=MsoNormal>Or</p>

<p class=MsoNormal>AjaxPro.Utility.RegisterTypeForAjax(typeof(Namespace.ClassName))
(C#)</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>C# Sample</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code><span style='color:blue'>private</span> <span style='color:blue'>void</span>
Page_Load(<span style='color:blue'>object</span> sender, System.EventArgs e)</p>

<p class=Code>{</p>

<p class=Code style='text-indent:.5in'><span style='color:green'>// Put user
code to initialize the page here</span></p>

<p class=Code>      AjaxPro.Utility.RegisterTypeForAjax(<span style='color:
blue'>typeof</span>(AjaxVB.WebForm1));</p>

<p class=Code>}</p>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Visual Basic Sample.</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>    <span style='color:blue'>Private</span> <span
style='color:blue'>Sub</span> Page_Load(<span style='color:blue'>ByVal</span> sender
<span style='color:blue'>As</span> System.Object, <span style='color:blue'>ByVal</span>
e <span style='color:blue'>As</span> System.EventArgs) <span style='color:blue'>Handles</span>
<span style='color:blue'>MyBase</span>.Load</p>

<p class=Code>        <span style='color:green'>'Put user code to initialize
the page here</span></p>

<p class=Code>        AjaxPro.Utility.RegisterTypeForAjax(<span
style='color:blue'>GetType</span>(AjaxVB.WebForm1))</p>

<p class=Code>    <span style='color:blue'>End</span> <span style='color:blue'>Sub</span></p>

</div>

<h3>Enabling a Method</h3>

<p class=MsoNormal>Once you have Ajax-enabled the page and website, Ajax-enabling
a method is quite simple.  The only item that is required is to add the
AjaxMethod attribute to the class.</p>

<h3>CS File</h3>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>[AjaxPro.AjaxMethod()]</p>

<p class=Code><span style='color:blue'>public</span> <span style='color:blue'>string</span>
GetServerTime()</p>

<p class=Code>{</p>

<p class=Code style='text-indent:.5in'><span style='color:blue'>return</span>
DateTime.Now.ToString();</p>

<p class=Code>}</p>

</div>

<h3>VB File</h3>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>&lt;AjaxPro.AjaxMethod()&gt; _</p>

<p class=Code><span style='color:blue'>Public</span> <span style='color:blue'>Function</span>
GetServerTime() <span style='color:blue'>As</span> <span style='color:blue'>String</span></p>

<p class=Code>    <span style='color:blue'>Return</span>
DateTime.Now.ToString()</p>

<p class=Code><span style='color:blue'>End</span> <span style='color:blue'>Function</span></p>

</div>

<p class=MsoNormal>&nbsp;</p>

<h3>ASPX File</h3>

<p class=MsoNormal>Within the HTML designer, add the following line to include
the JavaScript library to the page.  It is recommended to name the JavaScript
file, the same as the web page name.</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>&lt;<span style='color:maroon'>script</span><span
style='color:fuchsia'> </span><span style='color:red'>language</span>=&quot;javascript&quot;<span
style='color:fuchsia'> </span><span style='color:red'>src</span>=&quot;WebForm1.js&quot;&gt;&lt;/<span
style='color:maroon'>script</span>&gt;</p>

</div>

<h3>JS File</h3>

<p class=MsoNormal>The JavaScript file contains the calls to the server.  In
order to call the ASP.NET method, you follow the following syntax: </p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>namespace.classname.methodname (params, callback_function)</p>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The params can be any number of parameters but should match
the signature of the ASP.NET method.  Please note the current version of
AjaxPro.Net library does not support overloaded methods.</p>

<p class=MsoNormal>The callback_function is optional but stronger recommended.</p>

<p class=MsoNormal>&nbsp;</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>function GetServerTime() </p>

<p class=Code>{ </p>

<p class=Code style='text-indent:.5in'>AjaxVB.WebForm1.GetServerTime(GetServerTime_Callback)</p>

<p class=Code>} </p>

<p class=Code>function GetServerTime_Callback(response) </p>

<p class=Code>{</p>

<p class=Code style='text-indent:.5in'>Label1.innerHTML = response.value; </p>

<p class=Code>}</p>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>When a callback function is used, which is strongly
recommended, a response object will be passed as the only parameter.  The
response object contained two (2) objects</p>

<p class=MsoNormal>            </p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 width=595
 style='width:6.2in;border-collapse:collapse;border:none'>
 <tr>
  <td width=79 valign=top style='width:59.4pt;border:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Value</p>
  </td>
  <td width=516 valign=top style='width:387.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The returned value from the ASP.NET method</p>
  </td>
 </tr>
 <tr>
  <td width=79 valign=top style='width:59.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Error</p>
  </td>
  <td width=516 valign=top style='width:387.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>If not null, an object containing error information</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Error Object</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 width=595
 style='width:6.2in;border-collapse:collapse;border:none'>
 <tr>
  <td width=79 valign=top style='width:59.4pt;border:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Message</p>
  </td>
  <td width=516 valign=top style='width:387.0pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The message text, Err.ToString()</p>
  </td>
 </tr>
 <tr>
  <td width=79 valign=top style='width:59.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Type</p>
  </td>
  <td width=516 valign=top style='width:387.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The type of Exception</p>
  </td>
 </tr>
 <tr>
  <td width=79 valign=top style='width:59.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Stack</p>
  </td>
  <td width=516 valign=top style='width:387.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>A full stack trace</p>
  </td>
 </tr>
 <tr>
  <td width=79 valign=top style='width:59.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>Source</p>
  </td>
  <td width=516 valign=top style='width:387.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal>The page source that generated the error.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<h1>Recommendations</h1>

<p class=MsoNormal>Use a JavaScript file.  This will enable you to Debug any
problems within the Visual Studio IDE.</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Use the callback function</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>function GetServerTime_Callback(response) </p>

<p class=Code>{</p>

<p class=Code>      </p>

<p class=Code style='text-indent:.5in'>if (response.error != null)</p>

<p class=Code>      {</p>

<p class=Code>            // Display the error</p>

<p class=Code>            return;</p>

<p class=Code>      }</p>

<p class=Code>      </p>

<p class=Code>      var saveResults = response.value;</p>

<p class=Code>      if (saveResults != &quot;&quot;)</p>

<p class=Code>      {</p>

<p class=Code>            // Nothing was return</p>

<p class=Code>      }</p>

<p class=Code>&nbsp;</p>

<p class=Code>      // Work with the response</p>

<p class=Code style='text-indent:.5in'>Label1.innerHTML = saveResults; </p>

<p class=Code>}</p>

</div>

<h1>Samples</h1>

<h2>Populating a Drop Down List, SELECT element</h2>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>function GetTeamList(response)</p>

<p class=Code>{</p>

<p class=Code>&nbsp;</p>

<p class=Code style='text-indent:.5in'>var teamsList =
document.getElementById(&quot;ctrlContent__ctl0_ucProfile_dropTeam&quot;);</p>

<p class=Code>&nbsp;</p>

<p class=Code>      //if the server side code threw an exception</p>

<p class=Code>      if (response.error != null)</p>

<p class=Code>      {    </p>

<p class=Code>            alert(&quot;A problem occurred in
Profile:LoadTeams\n&quot; + response.error.Message); //we should probably do
better than this</p>

<p class=Code>            return;</p>

<p class=Code>      }  </p>

<p class=Code>      </p>

<p class=Code>      var teams = response.value;  </p>

<p class=Code>      //if the response wasn't what we expected  </p>

<p class=Code>      if (teams == null || typeof(teams) != &quot;object&quot;)</p>

<p class=Code>      {</p>

<p class=Code>            alert('A problem occurred in Profile:LoadTeams');</p>

<p class=Code>            return;  </p>

<p class=Code>      }</p>

<p class=Code>&nbsp;</p>

<p class=Code>      teamsList.options.length = 0; //reset the teams
dropdown     </p>

<p class=Code>&nbsp;</p>

<p class=Code>      //note that this is JavaScript casing and the L in length
is lowercase for arrays</p>

<p class=Code>      teamsList.options[teamsList.options.length] = new
Option(&quot;&quot;, &quot;&quot;);</p>

<p class=Code>      for (var i = 0; i &lt; teams.Rows.length; ++i)</p>

<p class=Code>      {</p>

<p class=Code>          teamsList.options[teamsList.options.length] = new
Option(teams.Rows[i].team_name, teams.Rows[i].team);       </p>

<p class=Code>            //teamsList.options[teamsList.options.length] = new
Option(teams[i].team_name, teams[i].team);       </p>

<p class=Code>      }  </p>

<p class=Code>}</p>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>The example above assumes that the ASP.NET method returns a
DataTable. If a DataSet  is returned, preface the .Rows with .Tables[0].</p>

<h2>Sending a DataSet to the Server</h2>

<p class=MsoNormal>&nbsp;</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt'>

<p class=Code>// Create the DataSet</p>

<p class=Code>var ds = new Ajax.Web.DataSet();</p>

<p class=Code>&nbsp;</p>

<p class=Code>// Create a DataTable</p>

<p class=Code>Var dt = new Ajax.Web.DataTable();</p>

<p class=Code>&nbsp;</p>

<p class=Code>// Add the columns</p>

<p class=Code>      dt.addColumn(&quot;NodeId&quot;, &quot;System.Int&quot;);</p>

<p class=Code>      dt.addColumn(&quot;ParentId&quot;, &quot;System.Int&quot;);</p>

<p class=Code>      dt.addColumn(&quot;MenuText&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;StatusText&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;NavigateUrl&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;LookId&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;LeftImage&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;LeftHoverImage&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;RightImage&quot;,
&quot;System.String&quot;);</p>

<p class=Code>      dt.addColumn(&quot;RightHoverImage&quot;,
&quot;System.String&quot;);</p>

<p class=Code>&nbsp;</p>

<p class=Code>      // Create an populate the row</p>

<p class=Code>      var drToAdd = new Object();</p>

<p class=Code>      drToAdd.NodeId =
document.getElementById(&quot;txtNodeId&quot;).value;</p>

<p class=Code>      drToAdd.ParentId =
document.getElementById(&quot;txtParentId&quot;).value;</p>

<p class=Code>      drToAdd.MenuText = document.getElementById(&quot;txtMenuText&quot;).value;</p>

<p class=Code>      drToAdd.StatusText =
document.getElementById(&quot;txtStatusText&quot;).value;</p>

<p class=Code>      drToAdd.NavigateUrl =
document.getElementById(&quot;txtNavigateUrl&quot;).value;</p>

<p class=Code>      drToAdd.LookId =
document.getElementById(&quot;txtLookId&quot;).value;</p>

<p class=Code>      drToAdd.LeftImage =
document.getElementById(&quot;txtLeftImage&quot;).value;</p>

<p class=Code>      drToAdd.LeftHoverImage =
document.getElementById(&quot;txtLeftHoverImage&quot;).value;</p>

<p class=Code>      drToAdd.RightImage =
document.getElementById(&quot;txtRightImage&quot;).value;</p>

<p class=Code>      drToAdd.RightHoverImage = document.getElementById(&quot;txtRightHoverImage&quot;).value;</p>

<p class=Code>      </p>

<p class=Code>      // Add the rows</p>

<p class=Code>      dt.addRow(drToAdd);</p>

<p class=Code>&nbsp;</p>

<p class=Code>      // Add the table to the DataTable</p>

<p class=Code>      ds.addTable(dt);</p>

</div>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
